stages:
  - build
  - deploy

build:frontend:
  stage: build
  image: node:alpine
  before_script:
    - cd fableous_fe
  script:
    - npm install
    - npm run build
  # only:
  #   changes:
  #     - fableous_fe/**
  cache:
    key: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"
    paths:
      - fableous_fe/node_modules/
  artifacts:
    expire_in: 1 hour
    paths:
      - fableous_fe/build/

.deploy-template: &docker-base
  image: docker
  services:
    - docker:dind
  script:
    - docker pull $CI_IMAGE_NAME:$BRANCH_TAG || true
    - docker build --cache-from $CI_IMAGE_NAME:$BRANCH_TAG --tag $CI_IMAGE_NAME:$CI_COMMIT_SHA --tag $CI_IMAGE_NAME:$BRANCH_TAG .
    - docker push $CI_IMAGE_NAME:$CI_COMMIT_SHA
    - docker push $CI_IMAGE_NAME:$BRANCH_TAG
  
.deploy-template:frontend: &docker-frontend
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - cd fableous_fe
  dependency:
    - build:frontend
  # only:
  #   changes:
  #     - fableous_fe/**
  <<: *docker-base
  
deploy-dev:frontend:
  variables:
    CI_IMAGE_NAME: $CI_REGISTRY/todo-teamname/fableous/$FE_IMAGE_NAME
    BRANCH_TAG: dev-latest
  except:
    - master
    - staging
  when: manual
  stage: deploy
  <<: *docker-frontend

deploy-staging:frontend:
  variables:
    CI_IMAGE_NAME: $CI_REGISTRY/todo-teamname/fableous/$FE_IMAGE_NAME
    BRANCH_TAG: staging
  only:
    - staging
  <<: *docker-frontend

deploy-master:frontend:
  variables:
    CI_IMAGE_NAME: $CI_REGISTRY/todo-teamname/fableous/$FE_IMAGE_NAME
    BRANCH_TAG: latest
  only:
    - master
  <<: *docker-frontend
